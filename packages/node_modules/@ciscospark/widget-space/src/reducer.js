import {fromJS} from 'immutable';
import {reducers as messageReducers} from '@ciscospark/widget-message';
import {reducers as meetReducers} from '@ciscospark/widget-meet';
import mercuryReducer from '@ciscospark/redux-module-mercury';

import {
  FETCHING_SPACE_DETAILS,
  STORE_SPACE_DETAILS,
  TOGGLE_ACTIVITY_MENU_VISIBLE,
  UPDATE_ACTIVITY_MENU_VISIBLE,
  UPDATE_ACTIVITY_TYPE
} from './actions';

export const initialState = fromJS({
  activityType: null,
  spaceDetails: {},
  status: {
    activityMenuVisible: false,
    fetchingSpaceDetails: false
  }
});

export function reducer(state = initialState, action) {
  switch (action.type) {
  case UPDATE_ACTIVITY_MENU_VISIBLE:
    return state.set(`activityMenuVisible`, action.payload.isActivityMenuVisible);

  case UPDATE_ACTIVITY_TYPE:
    return state.set(`activityType`, action.payload.type)
      .set(`activityMenuVisible`, false);

  case TOGGLE_ACTIVITY_MENU_VISIBLE:
    return state.set(`activityMenuVisible`, !state.get(`activityMenuVisible`));

  case FETCHING_SPACE_DETAILS:
    return state.setIn([`status`, `fetchingSpaceDetails`], true);

  case STORE_SPACE_DETAILS:
    return state.set([`status`, `fetchingSpaceDetails`], false)
      .mergeIn([`spaceDetails`], action.payload.details);

  default:
    return state;
  }
}

const reducers = {
  ...messageReducers,
  ...meetReducers,
  mercury: mercuryReducer,
  widgetSpace: reducer
};

export default reducers;
