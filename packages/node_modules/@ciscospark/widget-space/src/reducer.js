import {fromJS} from 'immutable';
import {reducers as messageReducers} from '@ciscospark/widget-message';
import {reducers as meetReducers} from '@ciscospark/widget-meet';

import {
  TOGGLE_ACTIVITY_MENU_VISIBLE,
  UPDATE_ACTIVITY_MENU_VISIBLE,
  UPDATE_ACTIVITY_TYPE
} from './actions';

export const initialState = fromJS({
  activityType: null,
  activityMenuVisible: false
});

export function reducer(state = initialState, action) {
  switch (action.type) {
  case UPDATE_ACTIVITY_MENU_VISIBLE:
    return state.set(`activityMenuVisible`, action.payload.isActivityMenuVisible);

  case UPDATE_ACTIVITY_TYPE:
    return state.set(`activityType`, action.payload.type)
      .set(`activityMenuVisible`, false);

  case TOGGLE_ACTIVITY_MENU_VISIBLE:
    return state.set(`activityMenuVisible`, !state.get(`activityMenuVisible`));

  default:
    return state;
  }
}

const reducers = {
  ...messageReducers,
  ...meetReducers,
  widgetSpace: reducer
};

export default reducers;
