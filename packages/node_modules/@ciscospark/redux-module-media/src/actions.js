
export const MEDIA_UPDATE_MEDIA_STATE = `MEDIA_UPDATE_MEDIA_STATE`;
export function updateMediaState(mediaState) {
  return {
    type: MEDIA_UPDATE_MEDIA_STATE,
    payload: {
      mediaState
    }
  };
}

export const MEDIA_UPDATE_CALL_STATE = `MEDIA_UPDATE_CALL_STATE`;
export function updateCallState(callState) {
  return {
    type: MEDIA_UPDATE_CALL_STATE,
    payload: {
      callState
    }
  };
}

export const MEDIA_UPDATE_STATUS = `MEDIA_UPDATE_STATUS`;
export function updateStatus(status) {
  return {
    type: MEDIA_UPDATE_STATUS,
    payload: {
      status
    }
  };
}

export const MEDIA_CALL_USER = `MEDIA_CALL_USER`;
export function callUser({userId, constraints = {}}, spark) {
  return (dispatch) => {
    dispatch(updateStatus({isCalling: true}));
    spark.phone.createLocalMediaStream(constraints)
      .then((localMediaStream) => {
        const call = spark.phone.dial(
          userId,
          Object.assign({constraints}, {localMediaStream})
        );
        bindCallActions(dispatch, call);
        // call.on(`disconnected`, () => dispatch(updateCallState({})));
      });
  };
}

export const MEDIA_CALL_CONNECTED = `MEDIA_CALL_CONNECTED`;
export function callConnected(call) {
  return {
    type: MEDIA_CALL_CONNECTED,
    payload: {
      call
    }
  };
}

export const MEDIA_ENABLE_SELF_VIEW = `MEDIA_ENABLE_SELF_VIEW`;
export function enableSelfView() {
  return {
    type: ENABLE_SELF_VIEW
  };
}

export function bindCallActions(dispatch, call) {
  call.on(`connected`, () => dispatch(updateCallState(call)));
  call.on(`change:status`, () => dispatch(updateCallState(call)));
  call.on(`change:sendingAudio`, () => dispatch(updateCallState(call)));
  call.on(`change:receivingAudio`, () => dispatch(updateCallState(call)));
  call.on(`change:sendingVideo`, () => dispatch(updateCallState(call)));
  call.on(`change:receivingVideo`, () => dispatch(updateCallState(call)));
}

export function bindMediaActions(dispatch, call) {
  call.on(`remoteMediaStream:change`, () => dispatch(updateMediaState(call)));
  call.on(`localMediaStream:change`, () => dispatch(updateMediaState(call)));
  call.on(`change:localAudioDirection`, () => dispatch(updateMediaState(call)));
  call.on(`change:localVideoDirection`, () => dispatch(updateMediaState(call)));
  call.on(`change:remoteAudioDirection`, () => dispatch(updateMediaState(call)));
  call.on(`change:remoteVideoDirection`, () => dispatch(updateMediaState(call)));
}
