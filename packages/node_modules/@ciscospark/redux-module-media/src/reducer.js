import {fromJS} from 'immutable';

import {
  UPDATE_STATUS,
  CALL_CONNECTED
} from './actions';

export const initialState = fromJS({
  call: null,
  mediaState: {
  },
  callState: {},
  status: {
    isCalling: false,
    isRinging: false,
    isConnected: false,
    hasSelfView: false
  }
});

export default function reducer(state = initialState, action) {
  switch (action.type) {
  case UPDATE_STATUS:
    return state.mergeIn([`status`], action.payload.status);
  case CALL_CONNECTED: {
    const call = action.payload.call;
    return state
      .set(`call`, call)
      .setIn([`status`, `isConnected`], true)
      .setIn([`status`, `isCalling`], false)
      .setIn([`mediaState`, `localMediaStreamUrl`], call.localMediaStreamUrl)
      .setIn([`mediaState`, `remoteMediaStreamUrl`], call.remoteMediaStreamUrl)
      .setIn([`mediaState`, `remoteName`], call.remote.person.name);
  }
  default:
    return state;
  }
}
