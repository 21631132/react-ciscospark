import reducer, {initialState, CallRecord} from './reducer';
import {
  CHECKING_WEB_RTC_SUPPORT,
  CONNECT_CALL,
  REMOVE_CALL,
  STORE_CALL,
  UPDATE_CALL_STATE,
  UPDATE_STATUS,
  UPDATE_WEBRTC_SUPPORT
} from './actions';

describe('redux-module-media reducer', () => {
  it('should return an initial state', () => {
    expect(reducer(undefined, {}))
      .toMatchSnapshot();
  });

  it('should handle CHECKING_WEB_RTC_SUPPORT', () => {
    expect(reducer(initialState, {
      type: CHECKING_WEB_RTC_SUPPORT
    })).toMatchSnapshot();
  });

  it('should handle UPDATE_WEBRTC_SUPPORT', () => {
    expect(reducer(initialState, {
      type: UPDATE_WEBRTC_SUPPORT,
      payload: {
        supported: true
      }
    })).toMatchSnapshot();
  });

  it('should handle UPDATE_STATUS', () => {
    expect(reducer(initialState, {
      type: UPDATE_STATUS,
      payload: {
        status: {
          isListening: true
        }
      }
    })).toMatchSnapshot();
  });

  it('should handle STORE_CALL', () => {
    expect(reducer(initialState, {
      type: STORE_CALL,
      payload: {
        call: {
          mock: true
        },
        callState: {
          mockState: true
        },
        locusUrl: 'http://abc-123.gov'
      }
    })).toMatchSnapshot();
  });

  it('should handle UPDATE_CALL_STATE', () => {
    const url = 'http://abc-123.gov';
    const callRecord = new CallRecord({id: url});
    const updatedState = initialState.setIn(['calls', url], callRecord);
    expect(reducer(updatedState, {
      type: UPDATE_CALL_STATE,
      payload: {
        callState: {
          mockState: true,
          updated: true
        },
        locusUrl: url
      }
    })).toMatchSnapshot();
  });

  it('should handle CONNECT_CALL', () => {
    const url = 'http://abc-123.gov';
    const callRecord = new CallRecord({id: url});
    const updatedState = initialState.setIn(['calls', url], callRecord);

    expect(reducer(updatedState, {
      type: CONNECT_CALL,
      payload: {
        call: {
          locus: {
            fullState: {
              lastActive: 1515449380157
            },
            url
          },
          mock: true,
          connected: true
        },
        callState: {
          mockState: true,
          connected: true
        }
      }
    })).toMatchSnapshot();
  });

  it('should handle REMOVE_CALL', () => {
    const url = 'http://abc-123.gov';
    const callRecord = new CallRecord({id: url});
    const updatedState = initialState.setIn(['calls', url], callRecord);

    expect(reducer(updatedState, {
      type: REMOVE_CALL,
      payload: {
        locusUrl: url
      }
    })).toMatchSnapshot();
  });
});
