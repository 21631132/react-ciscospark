import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Button from '@ciscospark/react-component-button';

import styles from './styles.css';

const propTypes = {
  buttons: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    buttonClassName: PropTypes.string,
    iconType: PropTypes.string,
    onClick: PropTypes.func
  })).isRequired,
  showLabels: PropTypes.bool
};

const defaultProps = {
  showLabels: false
};

function ButtonControls(props) {
  const {
    buttons,
    showLabels
  } = props;

  const buttonsRendered = buttons.map((button) => {
    const label = showLabels && button.label ? button.label : '';
    const labelPosition = showLabels ? 'bottom' : '';
    return (
      <div className={classNames('ciscospark-button-control-item', styles.controlItem)} key={label}>
        <Button
          {...button}
          buttonClassName={classNames(button.buttonClassName, styles.button)}
          label={label}
          labelPosition={labelPosition}
        />
      </div>
    );
  });

  return (
    <div className={classNames('ciscospark-controls-container', styles.controlContainer)}>
      {buttonsRendered}
    </div>
  );
}

ButtonControls.propTypes = propTypes;
ButtonControls.defaultProps = defaultProps;

export default ButtonControls;
