import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Avatar from '@ciscospark/react-component-avatar';
import ButtonControls from '@ciscospark/react-component-button-controls';
import {ICONS} from '@ciscospark/react-component-icon';

import styles from './styles.css';

const propTypes = {
  answerButtonLabel: PropTypes.string,
  avatarImage: PropTypes.string,
  declineButtonLabel: PropTypes.string,
  displayName: PropTypes.string.isRequired,
  incomingCallMessage: PropTypes.string,
  onAnswerClick: PropTypes.func.isRequired,
  onDeclineClick: PropTypes.func.isRequired
};

const defaultProps = {
  answerButtonLabel: '',
  avatarImage: '',
  declineButtonLabel: '',
  incomingCallMessage: ''
};

function IncomingCall({
  answerButtonLabel,
  avatarImage,
  declineButtonLabel,
  incomingCallMessage,
  onAnswerClick,
  onDeclineClick,
  displayName
}) {
  const buttons = [
    {
      label: answerButtonLabel,
      iconType: ICONS.ICON_TYPE_VIDEO_OUTLINE,
      buttonClassName: styles.answerButton,
      onClick: onAnswerClick
    },
    {
      label: declineButtonLabel,
      iconType: ICONS.ICON_TYPE_EXIT,
      buttonClassName: styles.declineButton,
      onClick: onDeclineClick
    }
  ];

  return (
    <div className={classNames(styles.callInactiveContainer, 'call-inactive-container')}>
      <div className={classNames(styles.callAvatar, 'call-avatar')}>
        <Avatar
          image={avatarImage}
          name={displayName}
        />
      </div>
      <div className={classNames(styles.personName, 'call-person-name')}>
        {displayName}
      </div>
      <div className={classNames(styles.incomingCallLabel, 'incoming-call-label')}>
        {incomingCallMessage}
      </div>
      <div className={classNames(styles.callControls, 'call-controls-container')}>
        <ButtonControls
          buttons={buttons}
          showLabels
        />
      </div>
    </div>
  );
}

IncomingCall.propTypes = propTypes;
IncomingCall.defaultProps = defaultProps;

export default IncomingCall;
