import React, {PropTypes} from 'react';
import {intlShape} from 'react-intl';
import {ICON_TYPE_VIDEO_OUTLINE, ICON_TYPE_EXIT} from '@ciscospark/react-component-icon';

import ButtonControls from '@ciscospark/react-component-button-controls';

import messages from '../../messages';
import styles from './styles.css';

export default function CallControls({
  intl,
  onAnswerClick,
  onCallClick,
  onHangupClick,
  showAnswerButton,
  showCallButton,
  showHangupButton,
  showLabels
}) {
  const {formatMessage} = intl;
  const buttons = [];

  if (showAnswerButton) {
    buttons.push({
      label: formatMessage(messages.answerButtonLabel),
      iconType: ICON_TYPE_VIDEO_OUTLINE,
      buttonClassName: styles.answerButton,
      onClick: onAnswerClick
    });
  }
  if (showCallButton) {
    buttons.push({
      label: formatMessage(messages.callButtonLabel),
      iconType: ICON_TYPE_VIDEO_OUTLINE,
      buttonClassName: styles.callButton,
      onClick: onCallClick
    });
  }
  if (showHangupButton) {
    buttons.push({
      label: formatMessage(messages.hangupButtonLabel),
      iconType: ICON_TYPE_EXIT,
      buttonClassName: styles.hangupButton,
      onClick: onHangupClick
    });
  }

  return (
    <ButtonControls
      buttons={buttons}
      showLabels={showLabels}
    />
  );
}

CallControls.propTypes = {
  intl: intlShape.isRequired,
  onAnswerClick: PropTypes.func,
  onCallClick: PropTypes.func,
  onHangupClick: PropTypes.func,
  showAnswerButton: PropTypes.bool,
  showCallButton: PropTypes.bool,
  showHangupButton: PropTypes.bool,
  showLabels: PropTypes.bool
};
