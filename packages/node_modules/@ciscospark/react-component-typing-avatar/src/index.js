import React from 'react';
import PropTypes from 'prop-types';

import PresenceAvatar from '@ciscospark/react-container-presence-avatar';
import TypingIndicator from '@ciscospark/react-component-typing-indicator';

import classNames from 'classnames';

import styles from './styles.css';

function TypingAvatar(props) {
  const {avatarId, isTyping, name} = props;
  let typingIndicator;
  if (isTyping) {
    typingIndicator = <TypingIndicator />;
  }
  return (
    <div className={classNames(`ciscospark-typing-avatar`, styles.typingAvatar)}>
      <div className={classNames(`ciscospark-typing-avatar-tooltip`, styles.tooltip)}>
        <div className={classNames(`ciscospark-typing-avatar-tooltip-text`, styles.tooltipText)}>
          {name}
        </div>
      </div>
      <div className={classNames(`ciscospark-avatar`, styles.avatar)}>
        <PresenceAvatar avatarId={avatarId} iconSize={`20px`} name={name} />
      </div>
      <div className={classNames(`ciscospark-typing`, styles.typing)}>
        {typingIndicator}
      </div>
    </div>
  );
}

TypingAvatar.propTypes = {
  avatarId: PropTypes.string,
  isTyping: PropTypes.bool,
  name: PropTypes.string.isRequired
};

export default TypingAvatar;
