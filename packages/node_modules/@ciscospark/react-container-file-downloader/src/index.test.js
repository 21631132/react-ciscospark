import React from 'react';
import {Provider} from 'react-redux';
import renderer from 'react-test-renderer';

import {
  applyMiddleware,
  combineReducers,
  compose,
  createStore
} from 'redux';
import thunk from 'redux-thunk';

import {default as shareReducer} from '@ciscospark/redux-module-share';
import {default as sparkReducer} from '@ciscospark/react-redux-spark';

import injectFileDownloader from '.';

function testComponent(props) {
  return <div {...props} />;
}

describe(`FileDownloader container`, () => {
  const props = {
    files: [{
      url: `testFile1.jpg`
    }, {
      url: `testFile2.jpg`
    }]
  };

  const InjectedComponent = injectFileDownloader(testComponent);
  console.log(shareReducer);
  console.log(sparkReducer);
  const store = createStore(
    combineReducers({
      share: shareReducer,
      spark: sparkReducer
    }),
    compose([
      applyMiddleware(thunk)
    ])
  );

  const component = renderer.create(
    <Provider store={store}>
      <InjectedComponent {...props} />
    </Provider>
  );

  it(`renders properly`, () => {
    expect(component).toMatchSnapshot();
  });
});
