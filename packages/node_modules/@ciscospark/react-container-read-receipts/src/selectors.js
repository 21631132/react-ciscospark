/* eslint-disable max-params */
import {createSelector} from 'reselect';
import {orderBy} from 'lodash';

const getActivities = (state) => state.conversation.get(`activities`);
const getParticipants = (state) => state.conversation.get(`participants`);
const getCurrentUser = (state) => state.user.get(`currentUser`);
// Yes, avatar, not 'avatars'
const getAvatars = (state) => state.avatar;
const getTypingIndicators = (state) => state.indicators.get(`typing`);


export const getReadReceipts = createSelector(
  [getCurrentUser, getActivities, getParticipants, getAvatars, getTypingIndicators],
  (currentUser, activities, participants, avatars, typing) => {
    const activity = activities.last();
    const readParticipants = participants
    .filter((participant) =>
      participant.get(`id`) !== currentUser.id &&
      participant.getIn([`roomProperties`, `lastSeenActivityUUID`]) === activity.id)
    .toJS();

    const mappedParticipants = readParticipants
      .map((participant) => {
        const participantId = participant.id;
        const image = avatars.getIn([`items`, participantId]);
        // Typing events don't give us user IDs, only emails.
        const isTyping = typing.has(participant.emailAddress);
        return {
          displayName: participant.displayName,
          image,
          isTyping,
          userId: participantId
        };
      });
    const sortedParticipants = orderBy(mappedParticipants, `isTyping`, `desc`);
    const limitParticipants = sortedParticipants.slice(0, 10);

    return {
      users: limitParticipants,
      totalCount: readParticipants.length
    };
  }
);
