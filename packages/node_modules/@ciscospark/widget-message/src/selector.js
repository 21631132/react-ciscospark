import {createSelector} from 'reselect';

const getWidget = (state) => state.widgetMessage;
const getSparkInstance = (state, props) => props.sparkInstance || state.spark.get(`spark`);
const getSparkState = (state) => state.spark.get(`status`);
const getConversation = (state) => state.conversation;
const getUsers = (state) => state.user;
const getAvatars = (state) => state.avatar;
const getActivity = (state) => state.activity;
const getFlags = (state) => state.flags;
const getMercury = (state) => state.mercury;

export const getMessageWidgetProps = createSelector(
  [
    getSparkInstance,
    getSparkState,
    getAvatars,
    getActivity,
    getConversation,
    getFlags,
    getMercury,
    getUsers,
    getWidget
  ],
  (sparkInstance, sparkState, ...props) => {
    const propsObject = {};
    const propNames = [
      `avatar`,
      `activity`,
      `conversation`,
      `flags`,
      `mercury`,
      `user`,
      `widgetMessage`
    ];
    props.map((p, i) => {
      propsObject[propNames[i]] = p;
      return p;
    });
    propsObject.sparkInstance = sparkInstance;
    propsObject.sparkState = sparkState.toJS();

    return propsObject;
  }
);


