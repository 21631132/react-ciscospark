import {metrics} from '@ciscospark/react-component-utils';

export const UPDATE_SPARK_STATUS = `spark/UPDATE_SPARK_STATUS`;
export function updateSparkStatus(status) {
  return {
    type: UPDATE_SPARK_STATUS,
    payload: {
      status
    }
  };
}

export const STORE_SPARK_INSTANCE = `spark/STORE_SPARK_INSTANCE`;
export function storeSparkInstance(spark) {
  return {
    type: STORE_SPARK_INSTANCE,
    payload: {
      spark
    }
  };
}


export function registerDevice(spark) {
  return (dispatch) => {
    metrics.saveElapsedTime(`registerDevice:start`);
    metrics.sendTempMetric(`registerDevice:start`, spark);
    dispatch(updateSparkStatus({registering: true}));
    return spark.device.register()
      .then(() => {
        metrics.saveElapsedTime(`registerDevice:end`);
        metrics.sendTempMetric(`registerDevice:end`, spark);
        metrics.sendDurationMetric(`registerDevice:duration`, `registerDevice:start`, `registerDevice:end`, spark);
        dispatch(updateSparkStatus({registering: false, registered: true}));
      });
  };
}
