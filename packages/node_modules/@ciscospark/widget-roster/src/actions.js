export const VIEW_MAIN = `VIEW_MAIN`;
export const VIEW_ADD = `VIEW_ADD`;

export const UPDATE_PARTICIPANT_SETTINGS = `widget-roster/UPDATE_PARTICIPANT_SETTINGS`;
export const UPDATE_WIDGET_STATE = `widget-roster/UPDATE_WIDGET_STATE`;

function updateParticipantSettings(participantId, settings) {
  return {
    type: UPDATE_PARTICIPANT_SETTINGS,
    payload: {
      participantId,
      settings
    }
  };
}

export function updateWidgetState(state) {
  return {
    type: UPDATE_WIDGET_STATE,
    payload: {
      state
    }
  };
}

/**
 * Sets the widget view to the main roster view
 * @returns {Object}
 */
export function setWidgetViewMain() {
  return updateWidgetState({currentView: VIEW_MAIN});
}

/**
 * Sets the widget view to the add participant view
 * @returns {Object}
 */
export function setWidgetViewAdd() {
  return updateWidgetState({currentView: VIEW_ADD});
}

/**
 * Sets the current search term
 * @param {string} searchTerm
 * @returns {Object}
 */
export function setSearchTerm(searchTerm) {
  return updateWidgetState({searchTerm});
}

/**
 * Sets the flag for if a participant is being edited
 *
 * @export
 * @param {string} participantId
 * @param {boolean} isEditing
 * @returns {Object}
 */
export function setParticipantEditing(participantId, isEditing) {
  return updateParticipantSettings(participantId, {isEditing});
}
