import {fromJS, Map} from 'immutable';
import {combineReducers} from 'redux';

import avatar from '@ciscospark/redux-module-avatar';
import conversation from '@ciscospark/redux-module-conversation';
import user from '@ciscospark/redux-module-user';
import search from '@ciscospark/redux-module-search';
import spark from '@ciscospark/react-redux-spark';

import {
  UPDATE_PARTICIPANT_SETTINGS,
  UPDATE_WIDGET_STATE,
  VIEW_MAIN
} from './actions';

export const initialState = fromJS({
  currentView: VIEW_MAIN,
  searchTerm: ``,
  participantSettings: new Map()
});

export function reducer(state = initialState, action) {
  switch (action.type) {
  case UPDATE_PARTICIPANT_SETTINGS:
    return state.mergeIn([`participantSettings`, action.payload.participantId], action.payload.settings);

  case UPDATE_WIDGET_STATE:
    return state.merge(fromJS(action.payload.state));

  default:
    return state;
  }
}

export const reducers = {
  avatar,
  conversation,
  user,
  spark,
  search,
  widgetRoster: reducer
};

export default combineReducers(reducers);
