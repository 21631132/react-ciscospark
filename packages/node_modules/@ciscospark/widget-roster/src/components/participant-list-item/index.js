import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

import Avatar from '@ciscospark/react-component-avatar';

import styles from './styles.css';

export default function ParticipantListItem({
  onEdit,
  participant
}) {

  function handleEditClick() {
    editParticipant();
  }

  function handleEditKeyPress(e) {
    if (e.key === `Enter` || e.key === ` `) {
      editParticipant();
    }
  }

  function editParticipant() {
    if (!participant.inFlight) {
      onEdit(participant);
    }
  }

  const participantClasses = [
    `ciscospark-participant-list-item`,
    styles.participantListItem
  ];
  if (participant.external) {
    participantClasses.push(`ciscospark-participant-list-item-external`, styles.external);
  }
  if (participant.inFlight) {
    participantClasses.push(`ciscospark-participant-list-item-in-flight`, styles.inFlight);
  }
  return (
    // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    <div
      className={classNames(participantClasses)}
      onClick={handleEditClick}
      onKeyPress={handleEditKeyPress}
      role="button"
      tabIndex="0"
      title={participant.displayName}
    >
      <div className={classNames(`ciscospark-participant-list-avatar`, styles.avatar)}>
        <Avatar image={participant.avatar} name={participant.displayName} />
      </div>
      <div className={classNames(`ciscospark-participant-list-name`, styles.name)}>
        {participant.displayName}
      </div>
    </div>
  );
}

ParticipantListItem.propTypes = {
  onEdit: PropTypes.func,
  participant: PropTypes.shape({
    avatar: PropTypes.string,
    displayName: PropTypes.string,
    external: PropTypes.bool,
    id: PropTypes.string,
    inFlight: PropTypes.bool
  }).isRequired
};
