import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

import Avatar from '@ciscospark/react-component-avatar';

import styles from './styles.css';

const RosterParticipantDetails = ({
  canEdit,
  onCancel,
  onRemove,
  participant,
  titleCancel,
  titleRemove
}) => {
  function handleRemove() {
    onRemove(participant);
  }

  return (
    <div className={classNames(`ciscospark-roster-participant-details`, styles.participantDetails)} >
      <div className={classNames(`ciscospark-roster-participant-details-info`, styles.info)} >
        <div className={classNames(`ciscospark-roster-participant-details-avatar`, styles.avatar)}>
          <Avatar image={participant.avatar} name={participant.displayName} />
        </div>
        <div className={classNames(`ciscospark-roster-participant-details-info-text`, styles.infoText)} >
          <div className={classNames(`ciscospark-roster-participant-details-info-name`, styles.infoName)} title={participant.displayName} >
            {participant.displayName}
          </div>
          <div className={classNames(`ciscospark-roster-participant-details-info-email`, styles.infoEmail)} title={participant.emailAddress} >
            {participant.emailAddress}
          </div>
        </div>
      </div>
      <div className={classNames(`ciscospark-roster-participant-details-actions`, styles.actions)}>
        { canEdit &&
          <button className={classNames(`ciscospark-roster-participant-details-action-button`, styles.actionButton, `ciscospark-roster-participant-details-action-button-warning`, styles.actionWarning)} onClick={handleRemove}>
            {titleRemove}
          </button>
        }
        <button className={classNames(`ciscospark-roster-participant-details-action-button`, styles.actionButton)} onClick={onCancel}>
          {titleCancel}
        </button>
      </div>
    </div>
  );
};

RosterParticipantDetails.propTypes = {
  canEdit: PropTypes.bool,
  onCancel: PropTypes.func.isRequired,
  onRemove: PropTypes.func,
  participant: PropTypes.object.isRequired,
  titleCancel: PropTypes.string.isRequired,
  titleRemove: PropTypes.string.isRequired
};

export default RosterParticipantDetails;
