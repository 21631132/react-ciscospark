import React from 'react';
import PropTypes from 'prop-types';

import classNames from 'classnames';

import {
  ICON_TYPE_EXIT,
  ICON_TYPE_WAFFLE
} from '@ciscospark/react-component-icon';

import Button from '@ciscospark/react-component-button';

import styles from './styles.css';

const RosterHeader = ({onClose, onMenuClick, participantsCount}) => {
  const participantCountDisplay = participantsCount ? `(${participantsCount})` : null;

  return (
    <div className={classNames(`ciscospark-roster-header`, styles.rosterHeader)}>
      <div className={classNames(`ciscospark-roster-close`, styles.rosterClose)}>
        <div className={classNames(`ciscospark-roster-close-button`, styles.rosterCloseButton)}>
          <Button accessibilityLabel={`Close`} iconType={ICON_TYPE_EXIT} onClick={onClose} />
        </div>
      </div>
      <div className={classNames(`ciscospark-roster-title`, styles.rosterTitle)}>
        {`People ${participantCountDisplay}`}
      </div>
      <div className={classNames(`ciscospark-roster-menu`, styles.rosterMenu)}>
        <div className={classNames(`ciscospark-activity-menu-button`, styles.activityMenuButton)}>
          <Button accessibilityLabel={`Main Menu`} iconType={ICON_TYPE_WAFFLE} onClick={onMenuClick} />
        </div>
      </div>
    </div>
  );
};

RosterHeader.propTypes = {
  onClose: PropTypes.func.isRequired,
  onMenuClick: PropTypes.func.isRequired,
  participantsCount: PropTypes.number
};

export default RosterHeader;
