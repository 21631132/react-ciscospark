const TAG_ONE_ON_ONE = 'ONE_ON_ONE';

export function constructLastestActivity(items) {
  let latest = items.find((item) => ['tombstone', 'delete'].indexOf(item.verb) === -1);
  if (!latest) {
    latest = {
      actor: {
        displayName: ''
      },
      verb: '',
      object: {
        displayName: ''
      }
    };
  }
  return latest;
}

/**
 * Creates team object to be stored
 *
 * @param {Object} space
 * @param {Bool} isDecrypting
 * @returns {Object} formatted space object
 */
export function constructSpace(space, isDecrypting) {
  const s = {
    latestActivity: constructLastestActivity(space.activities.items),
    avatar: space.avatar,
    displayName: space.displayName,
    id: space.id,
    url: space.url,
    lastReadableActivityDate: space.lastReadableActivityDate,
    lastSeenActivityDate: space.lastSeenActivityDate,
    conversationWebUrl: space.conversationWebUrl,
    participants: space.participants.items,
    type: space.tags.includes(TAG_ONE_ON_ONE) ? 'direct' : 'group',
    published: space.published,
    tags: space.tags,
    team: space.team
  };

  if (isDecrypting === true || isDecrypting === false) {
    s.isDecrypting = isDecrypting;
  }

  return s;
}

