import React from 'react';
import ShallowRenderer from 'react-test-renderer/shallow';

import SpaceItem from '.';

const renderer = new ShallowRenderer();

const onClick = jest.fn();

describe('SpaceItem component', () => {
  it('renders a decrypting space', () => {
    renderer.render(
      <SpaceItem
        id="decrypting-space"
        isDecrypting
        name="Webex User"
        onClick={onClick}
      />
    );
    const component = renderer.getRenderOutput();

    expect(component).toMatchSnapshot();
  });

  it('renders a space', () => {
    renderer.render(
      <SpaceItem
        activityText="Hi there!"
        id="jane-doe-space"
        lastActivityTime="9:05 PM"
        latestActivity={{
          actorName: 'Jane Doe',
          type: 'post'
        }}
        isUnread
        hasCalling
        onCallClick={onClick}
        onClick={onClick}
        name="Webex User"
        teamColor="blue"
        teamName="Best Team"
      />
    );
    const component = renderer.getRenderOutput();

    expect(component).toMatchSnapshot();
  });

  it('correctly renders an active space', () => {
    renderer.render(
      <SpaceItem
        activityText="I'm active!"
        id="active-space-id"
        lastActivityTime="3:05 PM"
        latestActivity={{
          actorName: 'Andrew',
          type: 'post'
        }}
        active
        onCallClick={onClick}
        onClick={onClick}
        name="Webex User"
        teamColor="blue"
        teamName="Best Team"
      />
    );
    const component = renderer.getRenderOutput();

    expect(component).toMatchSnapshot();
  });

  it('renders a space with a call in progress', () => {
    renderer.render(
      <SpaceItem
        activityText="Hi there!"
        callStartTime={Date.now()}
        id="jane-doe-space"
        lastActivityTime="9:05 PM"
        latestActivity={{
          actorName: 'Jane Doe',
          type: 'post'
        }}
        isUnread
        hasCalling
        onCallClick={onClick}
        onClick={onClick}
        name="Webex User"
        teamColor="blue"
        teamName="Best Team"
      />
    );
    const component = renderer.getRenderOutput();

    expect(component).toMatchSnapshot();
  });

  it('renders a space with a call in progress without call support', () => {
    renderer.render(
      <SpaceItem
        activityText="Hi there!"
        callStartTime={Date.now()}
        id="jane-doe-space"
        lastActivityTime="9:05 PM"
        latestActivity={{
          actorName: 'Jane Doe',
          type: 'post'
        }}
        isUnread
        onCallClick={onClick}
        onClick={onClick}
        name="Webex User"
        teamColor="blue"
        teamName="Best Team"
      />
    );
    const component = renderer.getRenderOutput();

    expect(component).toMatchSnapshot();
  });
});
